name: CI/CD
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
env:
  PROJECT_NAME: api
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v2
        with:
          repository: Targoman/MigrationTool
          ref: dev
          submodules: recursive
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set the TAG value
        id: build-tag
        run: echo "::set-output name=TAG::$TAG"
      - run: echo "$TAG has been pushed"
      - run: ls -ltrh
      - name: build
        run: mkdir conf/tmp && cp -rL conf/TextProcessor conf/tmp && rm -f conf/TextProcessor && mv conf/tmp/* conf/ && rmdir conf/tmp && ls -lR conf
      - run: docker build --build-arg TAG -f Docker/Dockerfile.dev . -t ${{ env.PROJECT_NAME }}:$TAG
      - run: docker save --output="${{ env.PROJECT_NAME }}-$TAG.tar" ${{ env.PROJECT_NAME }}:$TAG
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-docker-image-${{ steps.build-tag.outputs.TAG }}
          path: ${{ env.PROJECT_NAME }}-${{ env.TAG }}.tar
          retention-days: 1
    outputs:
        tag: ${{ steps.build-tag.outputs.TAG }}
  delivery:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-docker-image-${{ needs.build.outputs.tag }}
        path: .
    - name: Load image
      run: docker load -i ${{ env.PROJECT_NAME }}-${{ needs.build.outputs.tag }}.tar
    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        #registry: ${{ secrets.DOCKER_URL}}
        #username: ${{ secrets.DOCKER_USERNAME }}
        #password: ${{ secrets.DOCKER_PASS }}
        username: targoman
        password: ${{ secrets.TARGOMAN_DOCKER_HUB_TOKEN }}
        logout: true
    - name: push to registry
      #run: docker tag ${{ env.PROJECT_NAME }}:1 ${{ secrets.DOCKER_URL}}/targoman-${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}:1
      run: docker tag ${{ env.PROJECT_NAME }}:${{ needs.build.outputs.tag }} targoman/${{ env.PROJECT_NAME }}:${{ needs.build.outputs.tag }}
    #- run: docker push ${{ secrets.DOCKER_URL}}/targoman-${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}:1
    - run: docker push targoman/${{ env.PROJECT_NAME }}:${{ needs.build.outputs.tag }}

  deploy:
    needs: 
      - delivery
      - build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - run: Deploy/deploy-script.sh ${{ secrets.DEPLOY_TOKEN }} ${{ env.PROJECT_NAME }} ${{ needs.build.outputs.tag }} ${{ secrets.DEPLOY_URL }}

    

